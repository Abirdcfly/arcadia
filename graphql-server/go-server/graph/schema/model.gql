# list
query listModels($input: ListCommonInput!,$filesInput: FileFilter){
  Model {
    listModels(input: $input) {
      totalCount
      hasNextPage
      nodes {
        __typename
        ... on Model {
          id
          creationTimestamp
          name
          namespace
          labels
          annotations
          creator
          displayName
          description
          status
          types
          updateTimestamp
          files(input: $filesInput) {
            totalCount
            hasNextPage
            nodes {
              ... on F {
              path
              time
              fileType
              count
              size
              creationTimestamp  
            }
          }
        }
      }
    }
  }
}
}

# get
query getModel($name: String!, $namespace: String!,$filesInput: FileFilter) {
  Model {
    getModel(name: $name, namespace: $namespace){
      id
      creationTimestamp
      name
      namespace
      labels
      annotations
      creator
      displayName
      description
      status
      types
      updateTimestamp
      files(input: $filesInput) {
        totalCount
        hasNextPage
        nodes {
          ... on F {
            path
            time
            fileType
            count
            size
            creationTimestamp  
          }
        }
      }
    }
  }
}

# create
mutation createModel($input: CreateModelInput!) {
  Model {
    createModel(input: $input) {
      id
      creationTimestamp
      name
      namespace
      labels
      annotations
      creator
      displayName
      description
      status
      types
      updateTimestamp
    }
  }
}

# update
mutation updateModel($input: UpdateModelInput) {
  Model {
    updateModel(input: $input){
      id
      creationTimestamp
      name
      namespace
      labels
      annotations
      creator
      displayName
      description
      status
      types
      updateTimestamp
    }
  }
}

# delete
mutation deleteModels($input: DeleteCommonInput) {
  Model {
    deleteModels(input: $input)
  }
}
